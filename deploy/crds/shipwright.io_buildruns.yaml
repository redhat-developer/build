
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: buildruns.shipwright.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
    description: The Succeeded status of the BuildRun
    name: Succeeded
    type: string
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
    description: The Succeeded reason of the BuildRun
    name: Reason
    type: string
  - JSONPath: .status.startTime
    description: The start time of this BuildRun
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    description: The completion time of this BuildRun
    name: CompletionTime
    type: date
  group: shipwright.io
  names:
    kind: BuildRun
    listKind: BuildRunList
    plural: buildruns
    shortNames:
    - br
    - brs
    singular: buildrun
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: BuildRun is the Schema representing an instance of build execution
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: BuildRunSpec defines the desired state of BuildRun
          properties:
            buildRef:
              description: BuildRef refers to the Build
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              required:
              - name
              type: object
            env:
              description: Env contains additional environment variables that should
                be passed to the build container
              items:
                description: EnvVar represents an environment variable present in
                  a Container.
                properties:
                  name:
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                    type: string
<<<<<<< HEAD
                required:
                - image
                type: object
              paramValues:
                description: Params is a list of key/value that could be used to set strategy parameters
                items:
                  description: ParamValue is a key/value that populates a strategy parameter used in the execution of the strategy steps
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  required:
                  - name
                  - value
                  type: object
                type: array
              serviceAccount:
                description: ServiceAccount refers to the kubernetes serviceaccount which is used for resource control. Default serviceaccount will be set if it is empty
                properties:
                  generate:
                    description: If generates a new ServiceAccount for the build
                    type: boolean
                  name:
                    description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
=======
                  value:
                    description: 'Variable references $(VAR_NAME) are expanded using
                      the previous defined environment variables in the container
                      and any service environment variables. If a variable cannot
                      be resolved, the reference in the input string will be unchanged.
                      The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                      $$(VAR_NAME). Escaped references will never be expanded, regardless
                      of whether the variable exists or not. Defaults to "".'
>>>>>>> b04d9ee3 (updating crds)
                    type: string
                  valueFrom:
                    description: Source for the environment variable's value. Cannot
                      be used if value is not empty.
                    properties:
                      configMapKeyRef:
                        description: Selects a key of a ConfigMap.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                      fieldRef:
                        description: 'Selects a field of the pod: supports metadata.name,
                          metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP,
                          status.podIPs.'
                        properties:
                          apiVersion:
                            description: Version of the schema the FieldPath is written
                              in terms of, defaults to "v1".
                            type: string
                          fieldPath:
                            description: Path of the field to select in the specified
                              API version.
                            type: string
                        required:
                        - fieldPath
                        type: object
<<<<<<< HEAD
                      image:
                        description: Image is the reference of the image.
                        type: string
                    required:
                    - image
                    type: object
                  paramValues:
                    description: Params is a list of key/value that could be used to set strategy parameters
                    items:
                      description: ParamValue is a key/value that populates a strategy parameter used in the execution of the strategy steps
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  runtime:
                    description: "Runtime represents the runtime-image. \n Deprecated: This feature is deprecated and will be removed in a future release.  See https://github.com/shipwright-io/community/blob/main/ships/deprecate-runtime.md for more information."
                    properties:
                      base:
                        description: Base runtime base image.
=======
                      resourceFieldRef:
                        description: 'Selects a resource of the container: only resources
                          limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage,
                          requests.cpu, requests.memory and requests.ephemeral-storage)
                          are currently supported.'
>>>>>>> b04d9ee3 (updating crds)
                        properties:
                          containerName:
                            description: 'Container name: required for volumes, optional
                              for env vars'
                            type: string
                          divisor:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Specifies the output format of the exposed
                              resources, defaults to "1"
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          resource:
                            description: 'Required: resource to select'
                            type: string
                        required:
                        - resource
                        type: object
                      secretKeyRef:
                        description: Selects a key of a secret in the pod's namespace
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                    type: object
                required:
                - name
                type: object
              type: array
            output:
              description: Output refers to the location where the generated image
                would be pushed to. It will overwrite the output image in build spec
              properties:
                credentials:
                  description: Credentials references a Secret that contains credentials
                    to access the image registry.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                image:
                  description: Image is the reference of the image.
                  type: string
              required:
              - image
              type: object
            serviceAccount:
              description: ServiceAccount refers to the kubernetes serviceaccount
                which is used for resource control. Default serviceaccount will be
                set if it is empty
              properties:
                generate:
                  description: If generates a new ServiceAccount for the build
                  type: boolean
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
              type: object
            timeout:
              description: Timeout defines the maximum run time of this BuildRun.
              format: duration
              type: string
          required:
          - buildRef
          type: object
        status:
          description: BuildRunStatus defines the observed state of BuildRun
          properties:
            buildSpec:
              description: BuildSpec is the Build Spec of this BuildRun.
              properties:
                builder:
                  description: Builder refers to the image containing the build tools
                    inside which the source code would be built.
                  properties:
                    credentials:
                      description: Credentials references a Secret that contains credentials
                        to access the image registry.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    image:
                      description: Image is the reference of the image.
                      type: string
                  required:
                  - image
                  type: object
                dockerfile:
                  description: Dockerfile is the path to the Dockerfile to be used
                    for build strategies which bank on the Dockerfile for building
                    an image.
                  type: string
                env:
                  description: Env contains additional environment variables that
                    should be passed to the build container
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                output:
                  description: Output refers to the location where the built image
                    would be pushed.
                  properties:
                    credentials:
                      description: Credentials references a Secret that contains credentials
                        to access the image registry.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    image:
                      description: Image is the reference of the image.
                      type: string
                  required:
                  - image
                  type: object
                parameters:
                  description: Parameters contains name-value that could be used to
                    loosely type parameters in the BuildStrategy.
                  items:
                    description: Parameter defines the data structure that would be
                      used for expressing arbitrary key/value pairs for the execution
                      of a build
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
                runtime:
                  description: "Runtime represents the runtime-image. \n Deprecated:
                    This feature is deprecated and will be removed in a future release.
                    \ See https://github.com/shipwright-io/community/blob/main/ships/deprecate-runtime.md
                    for more information."
                  properties:
                    base:
                      description: Base runtime base image.
                      properties:
                        credentials:
                          description: Credentials references a Secret that contains
                            credentials to access the image registry.
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                        image:
                          description: Image is the reference of the image.
                          type: string
                      required:
                      - image
                      type: object
                    entrypoint:
                      description: Entrypoint runtime-image entrypoint.
                      items:
                        type: string
                      type: array
                    env:
                      additionalProperties:
                        type: string
                      description: Env environment variables for runtime.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels map of additional labels to be applied on
                        image.
                      type: object
                    paths:
                      description: Paths list of directories/files to be copied into
                        runtime-image, using colon ":" to split up source and destination
                        paths.
                      items:
                        type: string
                      type: array
                    run:
                      description: Run arbitrary commands to run before copying data
                        into runtime-image.
                      items:
                        type: string
                      type: array
                    user:
                      description: User definitions of user and group for runtime-image.
                      properties:
                        group:
                          description: Group group name or GID employed in runtime-image.
                          type: string
                        name:
                          description: Name user name to be employed in runtime-image.
                          type: string
                      required:
                      - name
                      type: object
                    workDir:
                      description: WorkDir runtime image working directory `WORKDIR`.
                      type: string
                  type: object
                source:
                  description: Source refers to the Git repository containing the
                    source code to be built.
                  properties:
                    contextDir:
                      description: ContextDir is a path to subfolder in the repo.
                        Optional.
                      type: string
                    credentials:
                      description: Credentials references a Secret that contains credentials
                        to access the repository.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    revision:
                      description: "Revision describes the Git revision (e.g., branch,
                        tag, commit SHA, etc.) to fetch. \n If not defined, it will
                        fallback to the repository's default branch."
                      type: string
                    url:
                      description: URL describes the URL of the Git repository.
                      type: string
                  required:
                  - url
                  type: object
                sources:
                  description: Sources slice of BuildSource, defining external build
                    artifacts complementary to VCS (`.spec.source`) data.
                  items:
                    description: BuildSource remote artifact definition, also known
                      as "sources". Simple "name" and "url" pairs, initially without
                      "credentials" (authentication) support yet.
                    properties:
                      name:
                        description: Name instance entry.
                        type: string
                      url:
                        description: URL remote artifact location.
                        type: string
                    required:
                    - name
                    - url
                    type: object
                  type: array
                strategy:
                  description: Strategy references the BuildStrategy to use to build
                    the container image.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: BuildStrategyKind indicates the kind of the buildstrategy,
                        namespaced or cluster scoped.
                      type: string
                    name:
                      description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                  required:
                  - name
                  type: object
                timeout:
                  description: Timeout defines the maximum amount of time the Build
                    should take to execute.
                  format: duration
                  type: string
              required:
              - output
              - source
              - strategy
              type: object
            completionTime:
              description: CompletionTime is the time the build completed.
              format: date-time
              type: string
            conditions:
              description: Conditions holds the latest available observations of a
                resource's current state.
              items:
                description: Condition defines the required fields for populating
                  Build controllers Conditions
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime last time the condition transit
                      from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            failedAt:
              description: FailedAt points to the resource where the BuildRun failed
              properties:
                container:
                  type: string
                pod:
                  type: string
              type: object
            latestTaskRunRef:
              description: "LatestTaskRunRef is the name of the TaskRun responsible
                for executing this BuildRun. \n TODO: This should be called something
                like \"TaskRunName\""
              type: string
            startTime:
              description: StartTime is the time the build is actually started.
              format: date-time
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
